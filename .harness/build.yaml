pipeline:
  name: siva-end-2 end-delgate
  identifier: build
  projectIdentifier: SFTY_Training
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: IACM
        spec:
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          workspace: durgaworkspace
          execution:
            steps:
              - step:
                  type: IACMTerraformPlugin
                  name: init
                  identifier: init
                  timeout: 10m
                  spec:
                    command: init
              - step:
                  type: IACMTerraformPlugin
                  name: plan
                  identifier: plan
                  timeout: 10m
                  spec:
                    command: plan
              - step:
                  type: IACMTerraformPlugin
                  name: apply
                  identifier: apply
                  timeout: 30m
                  spec:
                    command: apply
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: |-
                      #!/bin/bash
                      set -e  

                      # Check installed Java versions  
                      echo "Checking installed Java versions..."  
                      update-alternatives --list java || echo "No alternatives found for Java"  

                      # Set Java 17 as the default version (Detect dynamically)
                      if [ -x "/usr/lib/jvm/temurin-17-jdk-amd64/bin/java" ]; then
                          update-alternatives --install /usr/bin/java java /usr/lib/jvm/temurin-17-jdk-amd64/bin/java 1  
                          update-alternatives --set java /usr/lib/jvm/temurin-17-jdk-amd64/bin/java  
                      else
                          echo "Java 17 not found! Please install Temurin 17 JDK."  
                          exit 1
                      fi

                      # Set JAVA_HOME and update PATH dynamically  
                      export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))  
                      export PATH=$JAVA_HOME/bin:$PATH  

                      # Verify Java version  
                      echo "Java version after setting JAVA_HOME:"  
                      java -version  

                      # Verify Maven version  
                      echo "Maven version:"  
                      mvn -version  

                      # Run Maven build  
                      echo "Starting Maven build..."  
                      mvn clean package -DskipTests  

                      echo "Maven build completed successfully!"
        tags: {}
    - parallel:
        - stage:
            name: image-build
            identifier: imagebuild
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              platform:
                os: Linux
                arch: Amd64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: BuildAndPushDockerRegistry_1
                      identifier: BuildAndPushDockerRegistry_1
                      spec:
                        connectorRef: yash
                        repo: sivasai2003/myapp
                        tags:
                          - yash1
                  - step:
                      type: AquaTrivy
                      name: AquaTrivy_1
                      identifier: AquaTrivy_1
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          type: container
                          detection: auto
                        advanced:
                          log:
                            level: info
                        privileged: true
                        image:
                          type: docker_v2
                          tag: yash
                          name: sivasai2003/myapp
                        sbom:
                          format: spdx-json
        - stage:
            name: gcp-build
            identifier: gcpbuild
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              platform:
                os: Linux
                arch: Amd64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      type: BuildAndPushGCR
                      name: BuildAndPushGCR_1
                      identifier: BuildAndPushGCR_1
                      spec:
                        connectorRef: sivanewgcp2
                        host: us.gcr.io
                        projectID: shiva-project-453013
                        imageName: siva
                        tags:
                          - yash1
    - stage:
        name: delegate-deploy
        identifier: delegatedeploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: yash
          environment:
            environmentRef: yashenv
            deployToAll: false
            infrastructureDefinitions:
              - identifier: yashinfra
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  type: K8sRollingDeploy
                  name: K8sRollingDeploy_2
                  identifier: K8sRollingDeploy_2
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  properties:
    ci:
      codebase:
        connectorRef: sivaimagebuild
        repoName: java-jenkins-sonarqube
        build: <+input>
        sparseCheckout: []
